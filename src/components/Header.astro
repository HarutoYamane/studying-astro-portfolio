---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header>
  <nav>
    <h2><a href="/">{SITE_TITLE}</a></h2>

    <div id="menu-content">
      <button id="close-menu-button" aria-label="メニューを閉じる">
        <svg viewBox="0 0 24 24" width="24" height="24">
          <path
            fill="currentColor"
            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
          >
          </path>
        </svg>
      </button>

      <ul class="internal-links">
        <li><HeaderLink href="/">Home</HeaderLink></li>
        <li><HeaderLink href="/about">About</HeaderLink></li>
        <li><HeaderLink href="/skills">Skills</HeaderLink></li>
        <li><HeaderLink href="/blog">Blog</HeaderLink></li>
      </ul>

      <div class="social-links">
        <a href="https://m.webtoo.ls/@astro" target="_blank">
          <svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
            <path
              fill="currentColor"
              d="M11.19 12.195c2.016-.24 3.77-1.475 3.99-2.603.348-1.778.32-4.339.32-4.339 0-3.47-2.286-4.488-2.286-4.488C12.062.238 10.083.017 8.027 0h-.05C5.92.017 3.942.238 2.79.765c0 0-2.285 1.017-2.285 4.488l-.002.662c-.004.64-.007 1.35.011 2.091.083 3.394.626 6.74 3.78 7.57 1.454.383 2.703.463 3.709.408 1.823-.1 2.847-.647 2.847-.647l-.06-1.317s-1.303.41-2.767.36c-1.45-.05-2.98-.156-3.215-1.928a3.614 3.614 0 0 1-.033-.496s1.424.346 3.228.428c1.103.05 2.137-.064 3.188-.189zm1.613-2.47H11.13v-4.08c0-.859-.364-1.295-1.091-1.295-.804 0-1.207.517-1.207 1.541v2.233H7.168V5.89c0-1.024-.403-1.541-1.207-1.541-.727 0-1.091.436-1.091 1.296v4.079H3.197V5.522c0-.859.22-1.541.66-2.046.456-.505 1.052-.764 1.793-.764.856 0 1.504.328 1.933.983L8 4.39l.417-.695c.429-.655 1.077-.983 1.934-.983.74 0 1.336.259 1.791.764.442.505.661 1.187.661 2.046v4.203z"
            >
            </path>
          </svg>
        </a>

        <a href="https://twitter.com/astrodotbuild" target="_blank">
          <svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
            <path
              fill="currentColor"
              d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"
            >
            </path>
          </svg>
        </a>

        <a href="https://github.com/withastro/astro" target="_blank">
          <svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32">
            <path
              fill="currentColor"
              d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
            >
            </path>
          </svg>
        </a>
      </div>
    </div>

    <div id="menu-button-container">
      <button id="open-menu-button" aria-label="メニューを開く">
        MENU
        <svg viewBox="0 0 8 6" class="menu-icon">
          <path
            d="M1.75 1.75 4 4.25l2.25-2.5"
            fill="none"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
          </path>
        </svg>
      </button>
    </div>
  </nav>

  <div id="overlay"></div>
</header>

<style>
  header {
    /* position: fixed; */
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    width: 100%;
    margin: 0;
    padding: 0;
    background: white;
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
  }

  nav {
    padding: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  nav h2,
  nav a {
    font-size: 1rem;
    color: var(--text-color);
    text-decoration: none;
    margin: 0;
  }

  .internal-links {
    display: flex;
    gap: 3rem;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  /* 　START justify-content: space-between で少し中央からズレるのを、中央に持ってくる処理 */
  nav {
    position: relative;
  }

  .internal-links {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
  /* 　END justify-content: space-between で少し中央からズレるのを、中央に持ってくる処理 */

  .social-links {
    display: flex;
    height: 32px;
    gap: 1rem;
  }

  #menu-button-container {
    display: none;
  }
  /* スマートフォン用（720px以下） */
  @media (max-width: 720px) {
    nav {
      padding: 1rem;
    }
    #menu-button-container {
      display: block;
    }

    #open-menu-button {
      display: flex;
      align-items: center;
      background-color: var(--card-bg-color);
      color: var(--text-color);
      padding: 0.5rem 1rem;
      border-radius: 9999px;
      font-size: 0.875rem;
      font-weight: 500;
      cursor: pointer;
    }

    #menu-content,
    #open-menu-button {
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(0, 0, 0, 0.2);
    }

    .menu-icon {
      margin-left: 0.75rem;
      height: auto;
      width: 0.5rem;
      stroke: var(--text-color);
    }

    #menu-content {
      display: block;
      opacity: 0;
      visibility: hidden;
      position: fixed;
      top: 4.5rem;
      left: 1rem;
      right: 1rem;
      background-color: var(--card-bg-color);
      border-radius: 2rem;
      padding: 3.5rem 1rem 2rem;
      z-index: 1000;
      /* アニメーション　 */
      transform: translateY(-10px);
      transition:
        opacity 0.2s ease-in-out,
        visibility 0.2s ease-in-out;
      transform: 0.2s ease-in-out;
    }

    #menu-content.open {
      opacity: 1;
      visibility: visible;
      /* アニメーション　 */
      transform: translateY(0);
    }

    #close-menu-button {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: none;
      border: none;
      cursor: pointer;
      color: var(--text-color);
    }

    .internal-links {
      /* 　justify-content: space-between で少し中央からズレるのを、中央に持ってくる処理 の解除 */
      position: static;
      transform: none;
      /* 　justify-content: space-between で少し中央からズレるのを、中央に持ってくる処理 の解除 */
      justify-content: center;
      gap: 2.5rem;
    }

    .social-links {
      margin-top: 1.5rem;
      display: flex;
      justify-content: center;
      gap: 2rem;
    }

    #overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(5px);
      z-index: 999;
    }

    #overlay.open {
      display: block;
    }
  }

  /* パソコン用（720px以上） */
  @media not (max-width: 720px) {
    #menu-button-container,
    #close-menu-button,
    #overlay.open {
      display: none;
    }
  }
</style>

<script>
  const menuButton = document.getElementById("open-menu-button");
  const menuContent = document.getElementById("menu-content");
  const closeMenuButton = document.getElementById("close-menu-button");
  const overlay = document.getElementById("overlay");

  function openMenu() {
    if (!menuContent || !overlay) return;
    menuContent.classList.add("open");
    overlay.classList.add("open");
  }

  function closeMenu() {
    if (!menuContent || !overlay) return;
    menuContent.classList.remove("open");
    overlay.classList.remove("open");
  }

  if (menuButton && menuContent && closeMenuButton) {
    menuButton.addEventListener("click", openMenu);
    closeMenuButton.addEventListener("click", closeMenu);

    document.addEventListener("click", (event) => {
      // as Node は TypeScript の型アサーション
      const target = event.target as Node;
      // クリックされた要素が menuContent か menuButton の子孫ではない場合は閉じる
      if (!menuContent.contains(target) && !menuButton.contains(target))
        closeMenu();
    });
  }
</script>
